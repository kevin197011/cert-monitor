# Default values for cert-monitor
replicaCount: 1

image:
  repository: cert-monitor
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 9393
  targetPort: 9393
  annotations: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: cert-monitor.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Istio Configuration
istio:
  enabled: true
  virtualService:
    enabled: true
    hosts:
      - cert-monitor.local
    gateways:
      - cert-monitor-gateway
  gateway:
    enabled: true
    hosts:
      - cert-monitor.local
    tls:
      mode: SIMPLE
      credentialName: cert-monitor-tls

# SSL Certificates Configuration
certificates:
  # 本地证书挂载配置
  local:
    enabled: true
    # 证书存储配置
    storage:
      # 使用ConfigMap存储证书（适用于测试环境）
      configMap:
        enabled: true
        name: cert-monitor-certs
      # 使用Secret存储证书（适用于生产环境）
      secret:
        enabled: false
        name: cert-monitor-certs-secret
      # 使用持久卷存储证书
      persistentVolume:
        enabled: false
        existingClaim: ""
        storageClass: ""
        size: 1Gi

# 应用配置
config:
  # Nacos配置
  nacos:
    addr: "http://nacos:8848"
    namespace: "public"
    group: "DEFAULT_GROUP"
    dataId: "cert-monitor.yml"

  # 日志级别
  logLevel: "info"

  # 指标端口
  metricsPort: 9393

  # 检查间隔（秒）
  checkInterval: 60

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Prometheus monitoring
monitoring:
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    labels: {}
    annotations: {}

  prometheusRule:
    enabled: true
    labels: {}
    rules:
      - alert: CertificateExpiringSoon
        expr: cert_expire_days < 30
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Certificate expiring soon"
          description: "Certificate for {{ $labels.domain }} ({{ $labels.source }}) will expire in {{ $value }} days"

      - alert: CertificateExpired
        expr: cert_expire_days <= 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "Certificate expired"
          description: "Certificate for {{ $labels.domain }} ({{ $labels.source }}) has expired"

      - alert: CertificateCheckFailed
        expr: cert_status == 0
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Certificate check failed"
          description: "Failed to check certificate for {{ $labels.domain }} ({{ $labels.source }})"