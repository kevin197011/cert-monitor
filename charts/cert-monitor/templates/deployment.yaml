apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cert-monitor.fullname" . }}
  labels:
    {{- include "cert-monitor.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cert-monitor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cert-monitor.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cert-monitor.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: metrics
              containerPort: {{ .Values.config.metricsPort }}
              protocol: TCP
          env:
            - name: NACOS_ADDR
              value: {{ .Values.config.nacos.addr | quote }}
            - name: NACOS_NAMESPACE
              value: {{ .Values.config.nacos.namespace | quote }}
            - name: NACOS_GROUP
              value: {{ .Values.config.nacos.group | quote }}
            - name: NACOS_DATA_ID
              value: {{ .Values.config.nacos.dataId | quote }}
            - name: RUBY_ENV
              value: "production"
          livenessProbe:
            httpGet:
              path: /health
              port: metrics
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: metrics
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: metrics
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.certificates.local.enabled }}
            - name: certs-volume
              mountPath: /app/certs/ssl
              readOnly: true
            {{- end }}
      volumes:
        {{- if .Values.certificates.local.enabled }}
        - name: certs-volume
          {{- if .Values.certificates.local.storage.configMap.enabled }}
          configMap:
            name: {{ .Values.certificates.local.storage.configMap.name }}
          {{- else if .Values.certificates.local.storage.secret.enabled }}
          secret:
            secretName: {{ .Values.certificates.local.storage.secret.name }}
          {{- else if .Values.certificates.local.storage.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.certificates.local.storage.persistentVolume.existingClaim | default (include "cert-monitor.fullname" .) }}
          {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}